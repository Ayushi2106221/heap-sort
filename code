class Solution
{
    public:
    //Heapify function to maintain heap property.
    void heapify(int arr[], int n, int i)  
    {
      int largest=i;
        int leftindex=2*i+1;
        int rightindex=2*i+2;
        if(leftindex<n && arr[leftindex]>arr[largest]){
            largest=leftindex;
        }
        if(rightindex<n && arr[rightindex]>arr[largest]){
            largest=rightindex;
        }
        
        if(largest!=i){
            //means largest has changed
            swap(arr[largest], arr[i]);
            heapify(arr,n,largest);
        }
    }

    public:
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  
    { 
        for(int i=(n/2)-1;i>=0;i--){
            heapify(arr, n, i);
        }
        // heapSort( arr, n);
    }

    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n)
    {
        buildHeap(arr, n) ;
        
        while(n>1){
            //swap
            swap(arr[0],arr[n-1]);
            //decrement
            n--;
            
            //heapify
            heapify(arr, n,0);
        }
    }
};
